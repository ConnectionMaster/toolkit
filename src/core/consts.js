{
  const SUPPORTED_EVENTS = [
    // mouse events
    'onAuxClick',
    'onClick',
    'onContextMenu',
    'onDoubleClick',
    'onDrag',
    'onDragEnd',
    'onDragEnter',
    'onDragExit',
    'onDragLeave',
    'onDragOver',
    'onDragStart',
    'onDrop',
    'onMouseDown',
    'onMouseEnter',
    'onMouseLeave',
    'onMouseMove',
    'onMouseOut',
    'onMouseOver',
    'onMouseUp',
    // keyboard events
    'onKeyDown',
    'onKeyPress',
    'onKeyUp',
    // focus events
    'onFocus',
    'onBlur',
    // form events
    'onChange',
    'onInput',
    'onSubmit',
    // clipboard events
    'onCopy',
    'onCut',
    'onPaste',
    // composition events
    'onCompositionEnd',
    'onCompositionStart',
    'onCompositionUpdate',
    // selection events
    'onSelect',
    // touch events
    'onTouchCancel',
    'onTouchEnd',
    'onTouchMove',
    'onTouchStart',
    // UI events
    'onScroll',
    // wheel events
    'onWheel',
    // media events
    'onAbort',
    'onCanPlay',
    'onCanPlayThrough',
    'onDurationChange',
    'onEmptied',
    'onEncrypted',
    'onEnded',
    'onError',
    'onLoadedData',
    'onLoadedMetadata',
    'onLoadStart',
    'onPause',
    'onPlay',
    'onPlaying',
    'onProgress',
    'onRateChange',
    'onSeeked',
    'onSeeking',
    'onStalled',
    'onSuspend',
    'onTimeUpdate',
    'onVolumeChange',
    'onWaiting',
    // image events
    'onLoad',
    'onError',
    // animation events
    'onAnimationStart',
    'onAnimationEnd',
    'onAnimationIteration',
    // transition events
    'onTransitionEnd',
    // search events
    'onSearch',
  ];

  const SUPPORTED_ATTRIBUTES = [
    // most used attributes
    'tabIndex',
    'href',
    'draggable',
    'name',
    'disabled',
    'type',
    'value',
    'id',
    'checked',
    'contentEditable',
    'readOnly',
    'alt',
    'title',
    'width',
    'height',
    'required',
    'for',
    'label',
    'minLength',
    'maxLength',
    'method',
    'src',
    'rel',

    // other attributes
    'accept',
    'acceptCharset',
    'accessKey',
    'action',
    'allowFullScreen',
    'allowTransparency',
    'async',
    'autoComplete',
    'autoFocus',
    'autoPlay',
    'capture',
    'cellPadding',
    'cellSpacing',
    'challenge',
    'charSet',
    'cite',
    'classID',
    'colSpan',
    'cols',
    'content',
    'contextMenu',
    'controls',
    'coords',
    'crossOrigin',
    'data',
    'dateTime',
    'default',
    'defer',
    'dir',
    'download',
    'encType',
    'form',
    'frameBorder',
    'headers',
    'hidden',
    'high',
    'hrefLang',
    'httpEquiv',
    'icon',
    'incremental',
    'inputMode',
    'integrity',
    'is',
    'keyParams',
    'keyType',
    'kind',
    'lang',
    'list',
    'loop',
    'low',
    'manifest',
    'marginHeight',
    'marginWidth',
    'max',
    'media',
    'mediaGroup',
    'min',
    'multiple',
    'muted',
    'noValidate',
    'nonce',
    'open',
    'optimum',
    'pattern',
    'placeholder',
    'poster',
    'preload',
    'profile',
    'radioGroup',
    'reversed',
    'role',
    'rowSpan',
    'rows',
    'sandbox',
    'scope',
    'scoped',
    'scrolling',
    'seamless',
    'selected',
    'shape',
    'size',
    'sizes',
    'span',
    'spellCheck',
    'srcDoc',
    'srcLang',
    'srcSet',
    'start',
    'step',
    'summary',
    'target',
    'useMap',
    'wmode',
    'wrap',

    // aria attributes
    'ariaActivedescendant',
    'ariaAtomic',
    'ariaAutocomplete',
    'ariaBusy',
    'ariaChecked',
    'ariaControls',
    'ariaDescribedby',
    'ariaDisabled',
    'ariaDropeffect',
    'ariaExpanded',
    'ariaFlowto',
    'ariaGrabbed',
    'ariaHaspopup',
    'ariaHidden',
    'ariaInvalid',
    'ariaLabel',
    'ariaLabelledby',
    'ariaLevel',
    'ariaLive',
    'ariaMultiline',
    'ariaMultiselectable',
    'ariaOrientation',
    'ariaOwns',
    'ariaPosinset',
    'ariaPressed',
    'ariaReadonly',
    'ariaRelevant',
    'ariaRequired',
    'ariaSelected',
    'ariaSetsize',
    'ariaSort',
    'ariaValuemax',
    'ariaValuemin',
    'ariaValuenow',
    'ariaValuetext',
  ];

  const getSupportedStyles = element => {
    const keys = Object.keys(element.style);
    if (keys.length) {
      return keys;
    }
    return Object.keys(Object.getPrototypeOf(element.style))
        .filter(key => !key.includes('-'));
  };

  const SUPPORTED_STYLES = getSupportedStyles(document.documentElement);

  const SUPPORTED_FILTERS = [
    'blur',
    'brightness',
    'contrast',
    'dropShadow',
    'grayscale',
    'hueRotate',
    'invert',
    'opacity',
    'sepia',
    'saturate',
  ];

  const SUPPORTED_TRANSFORMS = [
    'matrix',      'matrix3d',   'translate', 'translate3d', 'translateX',
    'translateY',  'translateZ', 'scale',     'scale3d',     'scaleX',
    'scaleY',      'scaleZ',     'rotate',    'rotate3d',    'rotateX',
    'rotateY',     'rotateZ',    'skew',      'skewX',       'skewY',
    'perspective',
  ];

  const Consts = {
    SUPPORTED_ATTRIBUTES,
    SUPPORTED_EVENTS,
    SUPPORTED_STYLES,
    SUPPORTED_FILTERS,
    SUPPORTED_TRANSFORMS,
  };

  module.exports = Consts;
}
